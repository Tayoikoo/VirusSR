<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * AOPDLMINKIN (1465)
 *
 * Generated from protobuf message <code>EntityBindPropCsReq</code>
 */
class EntityBindPropCsReq extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>bool analihkipmb = 8;</code>
     */
    protected $analihkipmb = false;
    /**
     * Generated from protobuf field <code>.MotionInfo motion = 9;</code>
     */
    protected $motion = null;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type bool $analihkipmb
     *     @type \MotionInfo $motion
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\StarRail::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>bool analihkipmb = 8;</code>
     * @return bool
     */
    public function getAnalihkipmb()
    {
        return $this->analihkipmb;
    }

    /**
     * Generated from protobuf field <code>bool analihkipmb = 8;</code>
     * @param bool $var
     * @return $this
     */
    public function setAnalihkipmb($var)
    {
        GPBUtil::checkBool($var);
        $this->analihkipmb = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.MotionInfo motion = 9;</code>
     * @return \MotionInfo|null
     */
    public function getMotion()
    {
        return $this->motion;
    }

    public function hasMotion()
    {
        return isset($this->motion);
    }

    public function clearMotion()
    {
        unset($this->motion);
    }

    /**
     * Generated from protobuf field <code>.MotionInfo motion = 9;</code>
     * @param \MotionInfo $var
     * @return $this
     */
    public function setMotion($var)
    {
        GPBUtil::checkMessage($var, \MotionInfo::class);
        $this->motion = $var;

        return $this;
    }

}

