<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * KBILPNDAKLP
 *
 * Protobuf type <code>CmdChallengeType</code>
 */
class CmdChallengeType
{
    /**
     * Generated from protobuf enum <code>CmdChallengeTypeNone = 0;</code>
     */
    const CmdChallengeTypeNone = 0;
    /**
     * Generated from protobuf enum <code>CmdGetCurChallengeScRsp = 1734;</code>
     */
    const CmdGetCurChallengeScRsp = 1734;
    /**
     * Generated from protobuf enum <code>CmdStartChallengeCsReq = 1784;</code>
     */
    const CmdStartChallengeCsReq = 1784;
    /**
     * Generated from protobuf enum <code>CmdLeaveChallengeScRsp = 1728;</code>
     */
    const CmdLeaveChallengeScRsp = 1728;
    /**
     * Generated from protobuf enum <code>CmdChallengeSettleNotify = 1752;</code>
     */
    const CmdChallengeSettleNotify = 1752;
    /**
     * Generated from protobuf enum <code>CmdStartChallengeScRsp = 1727;</code>
     */
    const CmdStartChallengeScRsp = 1727;
    /**
     * Generated from protobuf enum <code>CmdRestartChallengePhaseCsReq = 1790;</code>
     */
    const CmdRestartChallengePhaseCsReq = 1790;
    /**
     * Generated from protobuf enum <code>CmdGetCurChallengeCsReq = 1793;</code>
     */
    const CmdGetCurChallengeCsReq = 1793;
    /**
     * Generated from protobuf enum <code>CmdGetChallengeGroupStatisticsScRsp = 1719;</code>
     */
    const CmdGetChallengeGroupStatisticsScRsp = 1719;
    /**
     * Generated from protobuf enum <code>CmdTakeChallengeRewardCsReq = 1796;</code>
     */
    const CmdTakeChallengeRewardCsReq = 1796;
    /**
     * Generated from protobuf enum <code>CmdChallengeBossPhaseSettleNotify = 1729;</code>
     */
    const CmdChallengeBossPhaseSettleNotify = 1729;
    /**
     * Generated from protobuf enum <code>CmdStartPartialChallengeScRsp = 1707;</code>
     */
    const CmdStartPartialChallengeScRsp = 1707;
    /**
     * Generated from protobuf enum <code>CmdEnterChallengeNextPhaseCsReq = 1712;</code>
     */
    const CmdEnterChallengeNextPhaseCsReq = 1712;
    /**
     * Generated from protobuf enum <code>CmdEnterChallengeNextPhaseScRsp = 1778;</code>
     */
    const CmdEnterChallengeNextPhaseScRsp = 1778;
    /**
     * Generated from protobuf enum <code>CmdStartPartialChallengeCsReq = 1726;</code>
     */
    const CmdStartPartialChallengeCsReq = 1726;
    /**
     * Generated from protobuf enum <code>CmdGetChallengeScRsp = 1795;</code>
     */
    const CmdGetChallengeScRsp = 1795;
    /**
     * Generated from protobuf enum <code>CmdChallengeLineupNotify = 1743;</code>
     */
    const CmdChallengeLineupNotify = 1743;
    /**
     * Generated from protobuf enum <code>CmdTakeChallengeRewardScRsp = 1705;</code>
     */
    const CmdTakeChallengeRewardScRsp = 1705;
    /**
     * Generated from protobuf enum <code>CmdGetChallengeGroupStatisticsCsReq = 1775;</code>
     */
    const CmdGetChallengeGroupStatisticsCsReq = 1775;
    /**
     * Generated from protobuf enum <code>CmdRestartChallengePhaseScRsp = 1759;</code>
     */
    const CmdRestartChallengePhaseScRsp = 1759;
    /**
     * Generated from protobuf enum <code>CmdLeaveChallengeCsReq = 1767;</code>
     */
    const CmdLeaveChallengeCsReq = 1767;
    /**
     * Generated from protobuf enum <code>CmdGetChallengeCsReq = 1736;</code>
     */
    const CmdGetChallengeCsReq = 1736;

    private static $valueToName = [
        self::CmdChallengeTypeNone => 'CmdChallengeTypeNone',
        self::CmdGetCurChallengeScRsp => 'CmdGetCurChallengeScRsp',
        self::CmdStartChallengeCsReq => 'CmdStartChallengeCsReq',
        self::CmdLeaveChallengeScRsp => 'CmdLeaveChallengeScRsp',
        self::CmdChallengeSettleNotify => 'CmdChallengeSettleNotify',
        self::CmdStartChallengeScRsp => 'CmdStartChallengeScRsp',
        self::CmdRestartChallengePhaseCsReq => 'CmdRestartChallengePhaseCsReq',
        self::CmdGetCurChallengeCsReq => 'CmdGetCurChallengeCsReq',
        self::CmdGetChallengeGroupStatisticsScRsp => 'CmdGetChallengeGroupStatisticsScRsp',
        self::CmdTakeChallengeRewardCsReq => 'CmdTakeChallengeRewardCsReq',
        self::CmdChallengeBossPhaseSettleNotify => 'CmdChallengeBossPhaseSettleNotify',
        self::CmdStartPartialChallengeScRsp => 'CmdStartPartialChallengeScRsp',
        self::CmdEnterChallengeNextPhaseCsReq => 'CmdEnterChallengeNextPhaseCsReq',
        self::CmdEnterChallengeNextPhaseScRsp => 'CmdEnterChallengeNextPhaseScRsp',
        self::CmdStartPartialChallengeCsReq => 'CmdStartPartialChallengeCsReq',
        self::CmdGetChallengeScRsp => 'CmdGetChallengeScRsp',
        self::CmdChallengeLineupNotify => 'CmdChallengeLineupNotify',
        self::CmdTakeChallengeRewardScRsp => 'CmdTakeChallengeRewardScRsp',
        self::CmdGetChallengeGroupStatisticsCsReq => 'CmdGetChallengeGroupStatisticsCsReq',
        self::CmdRestartChallengePhaseScRsp => 'CmdRestartChallengePhaseScRsp',
        self::CmdLeaveChallengeCsReq => 'CmdLeaveChallengeCsReq',
        self::CmdGetChallengeCsReq => 'CmdGetChallengeCsReq',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

