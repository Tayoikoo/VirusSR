<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>GGILDDCJLGA</code>
 */
class GGILDDCJLGA
{
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_IDLE = 0;</code>
     */
    const CHESS_ROGUE_LEVEL_IDLE = 0;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_PROCESSING = 1;</code>
     */
    const CHESS_ROGUE_LEVEL_PROCESSING = 1;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_PENDING = 2;</code>
     */
    const CHESS_ROGUE_LEVEL_PENDING = 2;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_FINISH = 3;</code>
     */
    const CHESS_ROGUE_LEVEL_FINISH = 3;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_FAILED = 4;</code>
     */
    const CHESS_ROGUE_LEVEL_FAILED = 4;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_LEVEL_FORCE_FINISH = 5;</code>
     */
    const CHESS_ROGUE_LEVEL_FORCE_FINISH = 5;

    private static $valueToName = [
        self::CHESS_ROGUE_LEVEL_IDLE => 'CHESS_ROGUE_LEVEL_IDLE',
        self::CHESS_ROGUE_LEVEL_PROCESSING => 'CHESS_ROGUE_LEVEL_PROCESSING',
        self::CHESS_ROGUE_LEVEL_PENDING => 'CHESS_ROGUE_LEVEL_PENDING',
        self::CHESS_ROGUE_LEVEL_FINISH => 'CHESS_ROGUE_LEVEL_FINISH',
        self::CHESS_ROGUE_LEVEL_FAILED => 'CHESS_ROGUE_LEVEL_FAILED',
        self::CHESS_ROGUE_LEVEL_FORCE_FINISH => 'CHESS_ROGUE_LEVEL_FORCE_FINISH',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

