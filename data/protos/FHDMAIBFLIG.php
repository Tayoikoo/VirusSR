<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>FHDMAIBFLIG</code>
 */
class FHDMAIBFLIG
{
    /**
     * Generated from protobuf enum <code>CmdStarFightTypeNone = 0;</code>
     */
    const CmdStarFightTypeNone = 0;
    /**
     * Generated from protobuf enum <code>CmdStarFightDataChangeNotify = 7161;</code>
     */
    const CmdStarFightDataChangeNotify = 7161;
    /**
     * Generated from protobuf enum <code>CmdGetStarFightDataScRsp = 7165;</code>
     */
    const CmdGetStarFightDataScRsp = 7165;
    /**
     * Generated from protobuf enum <code>CmdGetStarFightDataCsReq = 7166;</code>
     */
    const CmdGetStarFightDataCsReq = 7166;
    /**
     * Generated from protobuf enum <code>CmdStartStarFightLevelScRsp = 7168;</code>
     */
    const CmdStartStarFightLevelScRsp = 7168;
    /**
     * Generated from protobuf enum <code>CmdStartStarFightLevelCsReq = 7169;</code>
     */
    const CmdStartStarFightLevelCsReq = 7169;

    private static $valueToName = [
        self::CmdStarFightTypeNone => 'CmdStarFightTypeNone',
        self::CmdStarFightDataChangeNotify => 'CmdStarFightDataChangeNotify',
        self::CmdGetStarFightDataScRsp => 'CmdGetStarFightDataScRsp',
        self::CmdGetStarFightDataCsReq => 'CmdGetStarFightDataCsReq',
        self::CmdStartStarFightLevelScRsp => 'CmdStartStarFightLevelScRsp',
        self::CmdStartStarFightLevelCsReq => 'CmdStartStarFightLevelCsReq',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

