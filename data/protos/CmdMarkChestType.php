<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * FDNKMPBGCKI
 *
 * Protobuf type <code>CmdMarkChestType</code>
 */
class CmdMarkChestType
{
    /**
     * Generated from protobuf enum <code>CmdMarkChestTypeNone = 0;</code>
     */
    const CmdMarkChestTypeNone = 0;
    /**
     * Generated from protobuf enum <code>CmdUpdateMarkChestCsReq = 8187;</code>
     */
    const CmdUpdateMarkChestCsReq = 8187;
    /**
     * Generated from protobuf enum <code>CmdMarkChestChangedScNotify = 8197;</code>
     */
    const CmdMarkChestChangedScNotify = 8197;
    /**
     * Generated from protobuf enum <code>CmdGetMarkChestCsReq = 8200;</code>
     */
    const CmdGetMarkChestCsReq = 8200;
    /**
     * Generated from protobuf enum <code>CmdUpdateMarkChestScRsp = 8183;</code>
     */
    const CmdUpdateMarkChestScRsp = 8183;
    /**
     * Generated from protobuf enum <code>CmdGetMarkChestScRsp = 8195;</code>
     */
    const CmdGetMarkChestScRsp = 8195;

    private static $valueToName = [
        self::CmdMarkChestTypeNone => 'CmdMarkChestTypeNone',
        self::CmdUpdateMarkChestCsReq => 'CmdUpdateMarkChestCsReq',
        self::CmdMarkChestChangedScNotify => 'CmdMarkChestChangedScNotify',
        self::CmdGetMarkChestCsReq => 'CmdGetMarkChestCsReq',
        self::CmdUpdateMarkChestScRsp => 'CmdUpdateMarkChestScRsp',
        self::CmdGetMarkChestScRsp => 'CmdGetMarkChestScRsp',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

