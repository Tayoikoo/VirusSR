<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>HKLJAJFHCPE</code>
 */
class HKLJAJFHCPE
{
    /**
     * Generated from protobuf enum <code>ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0;</code>
     */
    const ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE = 0;
    /**
     * Generated from protobuf enum <code>ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1;</code>
     */
    const ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT = 1;
    /**
     * Generated from protobuf enum <code>ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2;</code>
     */
    const ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON = 2;
    /**
     * Generated from protobuf enum <code>ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3;</code>
     */
    const ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION = 3;
    /**
     * Generated from protobuf enum <code>ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4;</code>
     */
    const ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION = 4;

    private static $valueToName = [
        self::ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE => 'ROGUE_UNLOCK_FUNCTION_TYPE_MIRACLE',
        self::ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT => 'ROGUE_UNLOCK_FUNCTION_TYPE_SHOW_HINT',
        self::ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON => 'ROGUE_UNLOCK_FUNCTION_TYPE_COSMOS_BAN_AEON',
        self::ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION => 'ROGUE_UNLOCK_FUNTION_TYPE_EXHIBITION',
        self::ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION => 'ROGUE_UNLOCK_FUNTION_TYPE_COLLECTION',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

