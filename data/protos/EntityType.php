<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>EntityType</code>
 */
class EntityType
{
    /**
     * Generated from protobuf enum <code>ENTITY_NONE = 0;</code>
     */
    const ENTITY_NONE = 0;
    /**
     * Generated from protobuf enum <code>ENTITY_AVATAR = 1;</code>
     */
    const ENTITY_AVATAR = 1;
    /**
     * Generated from protobuf enum <code>ENTITY_MONSTER = 2;</code>
     */
    const ENTITY_MONSTER = 2;
    /**
     * Generated from protobuf enum <code>ENTITY_NPC = 3;</code>
     */
    const ENTITY_NPC = 3;
    /**
     * Generated from protobuf enum <code>ENTITY_PROP = 4;</code>
     */
    const ENTITY_PROP = 4;
    /**
     * Generated from protobuf enum <code>ENTITY_TRIGGER = 5;</code>
     */
    const ENTITY_TRIGGER = 5;
    /**
     * Generated from protobuf enum <code>ENTITY_ENV = 6;</code>
     */
    const ENTITY_ENV = 6;
    /**
     * Generated from protobuf enum <code>ENTITY_SUMMON_UNIT = 7;</code>
     */
    const ENTITY_SUMMON_UNIT = 7;

    private static $valueToName = [
        self::ENTITY_NONE => 'ENTITY_NONE',
        self::ENTITY_AVATAR => 'ENTITY_AVATAR',
        self::ENTITY_MONSTER => 'ENTITY_MONSTER',
        self::ENTITY_NPC => 'ENTITY_NPC',
        self::ENTITY_PROP => 'ENTITY_PROP',
        self::ENTITY_TRIGGER => 'ENTITY_TRIGGER',
        self::ENTITY_ENV => 'ENTITY_ENV',
        self::ENTITY_SUMMON_UNIT => 'ENTITY_SUMMON_UNIT',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

