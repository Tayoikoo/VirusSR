<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>CGMKFPIODBO</code>
 */
class CGMKFPIODBO
{
    /**
     * Generated from protobuf enum <code>MONSTER_BATTLE_TYPE_NONE = 0;</code>
     */
    const MONSTER_BATTLE_TYPE_NONE = 0;
    /**
     * Generated from protobuf enum <code>MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;</code>
     */
    const MONSTER_BATTLE_TYPE_TRIGGER_BATTLE = 1;
    /**
     * Generated from protobuf enum <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;</code>
     */
    const MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE = 2;
    /**
     * Generated from protobuf enum <code>MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;</code>
     */
    const MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE = 3;
    /**
     * Generated from protobuf enum <code>MONSTER_BATTLE_TYPE_NO_BATTLE = 4;</code>
     */
    const MONSTER_BATTLE_TYPE_NO_BATTLE = 4;

    private static $valueToName = [
        self::MONSTER_BATTLE_TYPE_NONE => 'MONSTER_BATTLE_TYPE_NONE',
        self::MONSTER_BATTLE_TYPE_TRIGGER_BATTLE => 'MONSTER_BATTLE_TYPE_TRIGGER_BATTLE',
        self::MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE => 'MONSTER_BATTLE_TYPE_DIRECT_DIE_SIMULATE_BATTLE',
        self::MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE => 'MONSTER_BATTLE_TYPE_DIRECT_DIE_SKIP_BATTLE',
        self::MONSTER_BATTLE_TYPE_NO_BATTLE => 'MONSTER_BATTLE_TYPE_NO_BATTLE',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

