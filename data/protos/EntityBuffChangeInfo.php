<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>EntityBuffChangeInfo</code>
 */
class EntityBuffChangeInfo extends \Google\Protobuf\Internal\Message
{
    /**
     * Generated from protobuf field <code>uint32 entity_id = 11;</code>
     */
    protected $entity_id = 0;
    /**
     * Generated from protobuf field <code>uint32 attacked_group_id = 7;</code>
     */
    protected $attacked_group_id = 0;
    /**
     * Generated from protobuf field <code>.SceneEntityBuffChangeType reason = 10;</code>
     */
    protected $reason = 0;
    protected $info_case;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \BuffInfo $buff_change_info
     *     @type int $remove_buff_id
     *     @type int $entity_id
     *     @type int $attacked_group_id
     *     @type int $reason
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\StarRail::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.BuffInfo buff_change_info = 15;</code>
     * @return \BuffInfo|null
     */
    public function getBuffChangeInfo()
    {
        return $this->readOneof(15);
    }

    public function hasBuffChangeInfo()
    {
        return $this->hasOneof(15);
    }

    /**
     * Generated from protobuf field <code>.BuffInfo buff_change_info = 15;</code>
     * @param \BuffInfo $var
     * @return $this
     */
    public function setBuffChangeInfo($var)
    {
        GPBUtil::checkMessage($var, \BuffInfo::class);
        $this->writeOneof(15, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 remove_buff_id = 5;</code>
     * @return int
     */
    public function getRemoveBuffId()
    {
        return $this->readOneof(5);
    }

    public function hasRemoveBuffId()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>uint32 remove_buff_id = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setRemoveBuffId($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 entity_id = 11;</code>
     * @return int
     */
    public function getEntityId()
    {
        return $this->entity_id;
    }

    /**
     * Generated from protobuf field <code>uint32 entity_id = 11;</code>
     * @param int $var
     * @return $this
     */
    public function setEntityId($var)
    {
        GPBUtil::checkUint32($var);
        $this->entity_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 attacked_group_id = 7;</code>
     * @return int
     */
    public function getAttackedGroupId()
    {
        return $this->attacked_group_id;
    }

    /**
     * Generated from protobuf field <code>uint32 attacked_group_id = 7;</code>
     * @param int $var
     * @return $this
     */
    public function setAttackedGroupId($var)
    {
        GPBUtil::checkUint32($var);
        $this->attacked_group_id = $var;

        return $this;
    }

    /**
     * Generated from protobuf field <code>.SceneEntityBuffChangeType reason = 10;</code>
     * @return int
     */
    public function getReason()
    {
        return $this->reason;
    }

    /**
     * Generated from protobuf field <code>.SceneEntityBuffChangeType reason = 10;</code>
     * @param int $var
     * @return $this
     */
    public function setReason($var)
    {
        GPBUtil::checkEnum($var, \SceneEntityBuffChangeType::class);
        $this->reason = $var;

        return $this;
    }

    /**
     * @return string
     */
    public function getInfoCase()
    {
        return $this->whichOneof("info_case");
    }

}

