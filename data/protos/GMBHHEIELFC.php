<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>GMBHHEIELFC</code>
 */
class GMBHHEIELFC
{
    /**
     * Generated from protobuf enum <code>EVENT_BEGIN = 0;</code>
     */
    const EVENT_BEGIN = 0;
    /**
     * Generated from protobuf enum <code>EVENT_BREAK = 1;</code>
     */
    const EVENT_BREAK = 1;
    /**
     * Generated from protobuf enum <code>EVENT_FALL = 2;</code>
     */
    const EVENT_FALL = 2;
    /**
     * Generated from protobuf enum <code>EVENT_REFRESH = 3;</code>
     */
    const EVENT_REFRESH = 3;
    /**
     * Generated from protobuf enum <code>EVENT_BIRD_SKILL = 4;</code>
     */
    const EVENT_BIRD_SKILL = 4;
    /**
     * Generated from protobuf enum <code>EVENT_ENV = 5;</code>
     */
    const EVENT_ENV = 5;
    /**
     * Generated from protobuf enum <code>EVENT_SHUFFLE = 6;</code>
     */
    const EVENT_SHUFFLE = 6;
    /**
     * Generated from protobuf enum <code>EVENT_SETTLE_TAG = 7;</code>
     */
    const EVENT_SETTLE_TAG = 7;

    private static $valueToName = [
        self::EVENT_BEGIN => 'EVENT_BEGIN',
        self::EVENT_BREAK => 'EVENT_BREAK',
        self::EVENT_FALL => 'EVENT_FALL',
        self::EVENT_REFRESH => 'EVENT_REFRESH',
        self::EVENT_BIRD_SKILL => 'EVENT_BIRD_SKILL',
        self::EVENT_ENV => 'EVENT_ENV',
        self::EVENT_SHUFFLE => 'EVENT_SHUFFLE',
        self::EVENT_SETTLE_TAG => 'EVENT_SETTLE_TAG',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

