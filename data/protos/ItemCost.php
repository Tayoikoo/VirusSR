<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

use Google\Protobuf\Internal\GPBType;
use Google\Protobuf\Internal\RepeatedField;
use Google\Protobuf\Internal\GPBUtil;

/**
 * Generated from protobuf message <code>ItemCost</code>
 */
class ItemCost extends \Google\Protobuf\Internal\Message
{
    protected $itemCase_;

    /**
     * Constructor.
     *
     * @param array $data {
     *     Optional. Data for populating the Message object.
     *
     *     @type \PileItem $PileItem
     *     @type int $EquipmentUniqueId
     *     @type int $RelicUniqueId
     * }
     */
    public function __construct($data = NULL) {
        \GPBMetadata\StarRail::initOnce();
        parent::__construct($data);
    }

    /**
     * Generated from protobuf field <code>.PileItem PileItem = 10;</code>
     * @return \PileItem|null
     */
    public function getPileItem()
    {
        return $this->readOneof(10);
    }

    public function hasPileItem()
    {
        return $this->hasOneof(10);
    }

    /**
     * Generated from protobuf field <code>.PileItem PileItem = 10;</code>
     * @param \PileItem $var
     * @return $this
     */
    public function setPileItem($var)
    {
        GPBUtil::checkMessage($var, \PileItem::class);
        $this->writeOneof(10, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 EquipmentUniqueId = 5;</code>
     * @return int
     */
    public function getEquipmentUniqueId()
    {
        return $this->readOneof(5);
    }

    public function hasEquipmentUniqueId()
    {
        return $this->hasOneof(5);
    }

    /**
     * Generated from protobuf field <code>uint32 EquipmentUniqueId = 5;</code>
     * @param int $var
     * @return $this
     */
    public function setEquipmentUniqueId($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(5, $var);

        return $this;
    }

    /**
     * Generated from protobuf field <code>uint32 RelicUniqueId = 4;</code>
     * @return int
     */
    public function getRelicUniqueId()
    {
        return $this->readOneof(4);
    }

    public function hasRelicUniqueId()
    {
        return $this->hasOneof(4);
    }

    /**
     * Generated from protobuf field <code>uint32 RelicUniqueId = 4;</code>
     * @param int $var
     * @return $this
     */
    public function setRelicUniqueId($var)
    {
        GPBUtil::checkUint32($var);
        $this->writeOneof(4, $var);

        return $this;
    }

    /**
     * @return string
     */
    public function getItemCase()
    {
        return $this->whichOneof("itemCase_");
    }

}

