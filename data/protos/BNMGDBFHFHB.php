<?php
# Generated by the protocol buffer compiler.  DO NOT EDIT!
# NO CHECKED-IN PROTOBUF GENCODE
# source: StarRail.proto

/**
 * Protobuf type <code>BNMGDBFHFHB</code>
 */
class BNMGDBFHFHB
{
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_NONE = 0;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_NONE = 0;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_KNIGHT = 1;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_KNIGHT = 1;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_MEMORY = 2;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_MEMORY = 2;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_WARLOCK = 3;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_WARLOCK = 3;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_PRIEST = 4;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_PRIEST = 4;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_ROGUE = 5;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_ROGUE = 5;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_WARRIOR = 6;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_WARRIOR = 6;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_HAPPY = 7;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_HAPPY = 7;
    /**
     * Generated from protobuf enum <code>CHESS_ROGUE_AEON_TYPE_BREED = 8;</code>
     */
    const CHESS_ROGUE_AEON_TYPE_BREED = 8;

    private static $valueToName = [
        self::CHESS_ROGUE_AEON_TYPE_NONE => 'CHESS_ROGUE_AEON_TYPE_NONE',
        self::CHESS_ROGUE_AEON_TYPE_KNIGHT => 'CHESS_ROGUE_AEON_TYPE_KNIGHT',
        self::CHESS_ROGUE_AEON_TYPE_MEMORY => 'CHESS_ROGUE_AEON_TYPE_MEMORY',
        self::CHESS_ROGUE_AEON_TYPE_WARLOCK => 'CHESS_ROGUE_AEON_TYPE_WARLOCK',
        self::CHESS_ROGUE_AEON_TYPE_PRIEST => 'CHESS_ROGUE_AEON_TYPE_PRIEST',
        self::CHESS_ROGUE_AEON_TYPE_ROGUE => 'CHESS_ROGUE_AEON_TYPE_ROGUE',
        self::CHESS_ROGUE_AEON_TYPE_WARRIOR => 'CHESS_ROGUE_AEON_TYPE_WARRIOR',
        self::CHESS_ROGUE_AEON_TYPE_HAPPY => 'CHESS_ROGUE_AEON_TYPE_HAPPY',
        self::CHESS_ROGUE_AEON_TYPE_BREED => 'CHESS_ROGUE_AEON_TYPE_BREED',
    ];

    public static function name($value)
    {
        if (!isset(self::$valueToName[$value])) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no name defined for value %s', __CLASS__, $value));
        }
        return self::$valueToName[$value];
    }


    public static function value($name)
    {
        $const = __CLASS__ . '::' . strtoupper($name);
        if (!defined($const)) {
            throw new UnexpectedValueException(sprintf(
                    'Enum %s has no value defined for name %s', __CLASS__, $name));
        }
        return constant($const);
    }
}

